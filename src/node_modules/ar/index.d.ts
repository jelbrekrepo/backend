export interface ARFile {
  name(): string
  date(): Date
  uid(): number
  gid(): number
  mode(): number
  dataSize(): number
  fileSize(): number
  headerSize(): number
  totalSize(): number
  fileData(): Buffer
}
export declare class Archive {
  private data
  private files
  constructor(data: Buffer)
  private createFiles()
  public getFiles(): ARFile[]
}
export declare class ARCommonFile implements ARFile {
  public data: Buffer
  constructor(data: Buffer)
  public name(): string
  public date(): Date
  public uid(): number
  public gid(): number
  public mode(): number
  public dataSize(): number
  public fileSize(): number
  private fmag()
  public headerSize(): number
  public totalSize(): number
  public fileData(): Buffer
}
export declare class BSDARFile extends ARCommonFile implements ARFile {
  private appendedFileName
  constructor(data: Buffer)
  private appendedNameSize()
  public name(): string
  public fileSize(): number
  public fileData(): Buffer
}
